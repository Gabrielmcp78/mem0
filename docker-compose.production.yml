version: '3.8'

services:
  # Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: mem0-qdrant
    ports:
      - "16333:16333"
      - "16334:16334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=16333
      - QDRANT__SERVICE__GRPC_PORT=16334
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: mem0-neo4j
    ports:
      - "17474:17474"
      - "17687:17687"
    volumes:
      - ./data/neo4j/data:/data
      - ./data/neo4j/logs:/logs
      - ./data/neo4j/import:/var/lib/neo4j/import
      - ./data/neo4j/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/mem0production
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "mem0production", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: mem0-redis
    ports:
      - "16379:16379"
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes --requirepass mem0redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "mem0redis", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for structured data
  postgres:
    image: postgres:15-alpine
    container_name: mem0-postgres
    ports:
      - "15432:15432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=mem0db
      - POSTGRES_USER=mem0user
      - POSTGRES_PASSWORD=mem0postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mem0user -d mem0db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OpenMemory MCP Server
  openmemory-mcp:
    build: 
      context: ./openmemory/api
      dockerfile: Dockerfile
    container_name: mem0-openmemory-mcp
    ports:
      - "18765:18765"
    volumes:
      - ./openmemory/api:/usr/src/openmemory
    environment:
      - OPENAI_API_KEY=ollama
      - OPENAI_BASE_URL=http://host.docker.internal:11434/v1
      - QDRANT_URL=http://qdrant:16333
      - NEO4J_URI=bolt://neo4j:17687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=mem0production
      - REDIS_URL=redis://:mem0redis@redis:16379
      - POSTGRES_URL=postgresql://mem0user:mem0postgres@postgres:15432/mem0db
      - USER=${USER:-mem0user}
    depends_on:
      qdrant:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 18765 --workers 4

  # OpenMemory UI
  openmemory-ui:
    build:
      context: ./openmemory/ui
      dockerfile: Dockerfile
    container_name: mem0-openmemory-ui
    ports:
      - "13000:13000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:18765
      - NEXT_PUBLIC_USER_ID=${USER:-mem0user}
    depends_on:
      - openmemory-mcp
    restart: unless-stopped

  # Mem0 API Server
  mem0-server:
    build:
      context: .
      dockerfile: Dockerfile.mem0
    container_name: mem0-api-server
    ports:
      - "1987:1987"
    volumes:
      - .:/app
    environment:
      - OPENAI_API_KEY=ollama
      - OPENAI_BASE_URL=http://host.docker.internal:11434/v1
      - QDRANT_URL=http://qdrant:16333
      - NEO4J_URI=bolt://neo4j:17687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=mem0production
    depends_on:
      qdrant:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    restart: unless-stopped

volumes:
  qdrant_data:
  neo4j_data:
  neo4j_logs:
  redis_data:
  postgres_data:

networks:
  default:
    name: mem0-network
    driver: bridge