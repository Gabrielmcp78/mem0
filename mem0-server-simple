#!/bin/bash
# Simple Mem0 Server Manager

SERVER_PATH="/Volumes/Ready500/DEVELOPMENT/mem0/integrations/mcp/native_node_server.js"
PID_FILE="/tmp/mem0-server.pid"

is_running() {
    [ -f "$PID_FILE" ] && ps -p "$(cat "$PID_FILE")" >/dev/null 2>&1
}

start_server() {
    if is_running; then
        echo "✅ Server already running (PID: $(cat $PID_FILE))"
        return 0
    fi
    
    echo "🚀 Starting server..."
    pkill -f "native_node_server.js" 2>/dev/null || true
    
    export QDRANT_URL="http://localhost:6333"
    export QDRANT_COLLECTION="gabriel_apple_intelligence_memories"
    export APPLE_INTELLIGENCE_ENABLED="true"
    
    nohup node "$SERVER_PATH" >/tmp/mem0-server.log 2>&1 &
    echo $! > "$PID_FILE"
    
    sleep 3
    if is_running; then
        echo "✅ Server started (PID: $(cat $PID_FILE))"
    else
        echo "❌ Failed to start server"
        return 1
    fi
}

stop_server() {
    if ! is_running; then
        echo "⚠️ Server not running"
        return 0
    fi
    
    local pid=$(cat "$PID_FILE")
    echo "🛑 Stopping server (PID: $pid)..."
    kill "$pid" 2>/dev/null || true
    rm -f "$PID_FILE"
    echo "✅ Server stopped"
}

show_status() {
    echo "=== Mem0 Apple Intelligence Server ==="
    if is_running; then
        echo "Status: ✅ Running (PID: $(cat $PID_FILE))"
    else
        echo "Status: ❌ Not running"
    fi
}

case "${1:-status}" in
    start) start_server ;;
    stop) stop_server ;;
    restart) stop_server; sleep 1; start_server ;;
    status) show_status ;;
    *) echo "Usage: $0 {start|stop|restart|status}" ;;
esac