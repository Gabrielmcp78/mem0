#!/bin/bash
# Mem0 Apple Intelligence Server Manager
set -e

SERVER_PATH="/Volumes/Ready500/DEVELOPMENT/mem0/integrations/mcp/native_node_server.js"
PID_FILE="/tmp/mem0-server.pid"
LOG_FILE="/tmp/mem0-server.log"

# Colors
G='\033[0;32m'; Y='\033[1;33m'; R='\033[0;31m'; B='\033[0;34m'; NC='\033[0m'
status() { echo -e "${G}✅ $1${NC}"; }
warn() { echo -e "${Y}⚠️  $1${NC}"; }
error() { echo -e "${R}❌ $1${NC}"; }
info() { echo -e "${B}ℹ️  $1${NC}"; }

is_running() {
    [ -f "$PID_FILE" ] && ps -p "$(cat "$PID_FILE")" > /dev/null 2>&1
}

start_server() {
    if is_running; then
        warn "Server already running (PID: $(cat $PID_FILE))"
        return 0
    fi
    
    info "Starting Mem0 Apple Intelligence server..."
    pkill -f "native_node_server.js" 2>/dev/null || true
    
    export QDRANT_URL="http://localhost:6333"
    export QDRANT_COLLECTION="gabriel_apple_intelligence_memories"
    export APPLE_INTELLIGENCE_ENABLED="true"
    
    nohup node "$SERVER_PATH" > "$LOG_FILE" 2>&1 &
    echo $! > "$PID_FILE"
    
    sleep 3
    if is_running; then
        status "Server started (PID: $(cat $PID_FILE))"
    else
        error "Failed to start server"
        return 1
    fi
}stop_server() {
    if ! is_running; then
        warn "Server not running"
        return 0
    fi
    
    local pid=$(cat "$PID_FILE")
    info "Stopping server (PID: $pid)..."
    kill -TERM "$pid" 2>/dev/null || true
    sleep 2
    ps -p "$pid" > /dev/null 2>&1 && kill -KILL "$pid" 2>/dev/null || true
    rm -f "$PID_FILE"
    status "Server stopped"
}

show_status() {
    echo "=== Mem0 Apple Intelligence Server ==="
    if is_running; then
        local pid=$(cat "$PID_FILE")
        echo "Status: ✅ Running (PID: $pid)"
        echo "Uptime: $(ps -o etime= -p $pid 2>/dev/null | tr -d ' ')"
    else
        echo "Status: ❌ Not running"
    fi
    echo "Log: $LOG_FILE"
}

case "${1:-status}" in
    start) start_server ;;
    stop) stop_server ;;
    restart) stop_server; sleep 1; start_server ;;
    status) show_status ;;
    logs) tail -f "$LOG_FILE" ;;
    *) echo "Usage: $0 {start|stop|restart|status|logs}" ;;
esac